OAR CHANGELOG
=============

version 2.2.9:
--------------

  - Bug 4225: Dump only 1 data structure when using -X or -Y or -D.
  - Bug fix in Finishing sequence (Suspect right nodes).

version 2.2.8:
--------------

  - Bug 4159: remove unneeded Dump print from oarstat.
  - Bug 4158: replace XML::Simple module by XML::Dumper one.
  - Bug fix for reservation (recalculate the right walltime).
  - Print job dependencies in oarstat.

version 2.2.7:
--------------

  - Bug 4106: fix oarsh and oarcp issue with some options (erroneous leading
    space).
  - Bug 4125: remove exit_code data when it is not relevant.
  - Fix potential bug when changing asynchronously the state of the jobs into
    "Terminated" or "Error".

version 2.2.6:
--------------

  - Bug fix: job types was not sent to cpuset manager script anymore.
             (border effect from bug 4069 resolution)

version 2.2.5:
--------------

  - Bug fix: remove user command when oar execute the epilogue script on the
    nodes.
  - Clean debug and mail messages format.
  - Remove bad oarsub syntax from oarsub doc.
  - Debug xauth path.
  - bug 3995: set project correctly when resubmitting a job
  - debug 'bash -c' on Fedora
  - bug 4069: reservations with CPUSET_ERROR (remove bad hosts and continue
    with a right integrity in the database)
  - bug 4044: fix free resources query for reservation (get the nearest hole
    from the beginning of the reservation)
  - bug 4013: now Dead, Suspected and Absent resources have different colors in
    drawgantt with a popup on them.
  
version 2.2.4:
--------------
  
  - Redirect third party commands into oar.log (easier to debug).
  - Add user info into drawgantt interface.
  - Some bug fixes.

version 2.2.3:
--------------

  - Debug prologue and epilogue when oarexec receives a signal.

version 2.2.2:
--------------

  - Switch nice value of the user processes into 0 in oarsh_shell (in case of
    sshd was launched with a different priority).
  - debug taktuk zombies in pingchecker and oar_Tools

version 2.2.1:
--------------

  - install the "allow_clasic_ssh" feature by default
  - debug DB installer

version 2.2:
------------

  - oar_server_proepilogue.pl: can be used for server prologue and epilogue to
    authorize users to access to nodes that are completely allocated by OAR. If
    the whole node is assigned then it kills all jobs from the user if all cpus
    are assigned.
  - the same thing can be done with cpuset_manager_PAM.pl as the script used to
    configure the cpuset. More efficent if cpusets are configured.
  - debug cm_availability feature to switch on and off nodes automatically
    depending on waiting jobs.
  - reservations now take care of cm_availability field

version 2.1.0:
--------------

  - add "oarcp" command to help the users to copy files using oarsh.
  - add sudo configuration to deal with bash. Now oarsub and oarsh have the
    same behaviour as ssh (the bash configuration files are loaded correctly)
  - bug fix in drawgantt (loose jobs after submission of a moldable one)
  - add SCHEDULER_RESOURCES_ALWAYS_ASSIGNED_TYPE into oar.conf. Thus admin can
    add some resources for each jobs (like frontale node)
  - add possibility to use taktuk to check the aliveness of the nodes
  - %jobid% is now replaced in stdout and stderr file names by the effective
    job id
  - change interface to shu down or wake up nodes automatically (now the node
    list is read on STDIN)
  - add OARSUB_FORCE_JOB_KEY in oar.conf. It says to create a job ssh key by
    default for each job.
  - %jobid% is now replaced in the ssh job key name (oarsub -k ...).
  - add NODE_FILE_DB_FIELD_DISTINCT_VALUES in oar.conf that enables the admin
    to configure the generated containt of the OAR_NODE_FILE
  - change ssh job key oarsub options behaviour
  - add options "--reinitialize" and "--delete-before" to the oaraccounting
    command
  - cpuset are now stored in /dev/cpuset/oar
  - debian packaging: configure and launch a specific sshd for the user oar
  - use a file descriptor to send the node list --> able to handle a very large
    amount of nodes
  - every config files are now in /etc/oar/
  - oardel can add a besteffort type to jobs and vis versa

version 2.0.2:
--------------

  - add warnings and exit code to oarnodesetting when there is a bad node name
    or resource number
  - change package version
  - change default behaviour for the cpuset_manager.pl (more portable)
  - enable a user to use the same ssh key for several jobs (at his own risk!)
  - add node hostnames in oarstat -f
  - add --accounting and -u options in oarstat
  - bug fix on index fields in the database (syncro): bug 2020
  - bug fix about server pro/epilogue: bug 2022
  - change the default output of oarstat. Now it is usable: bug 1875
  - remove keys in authorized_keys of oar (on the nodes) that do not
    correspond to an active cpuset (clean after a reboot)
  - reread oar.conf after each database connection tries
  - add support for X11 forwarding in oarsub -I and -C
  - debug mysql initialization script in debian package
  - add a variable in oarsh for the default options of ssh to use
    (more useful to change if the ssh version installed does not
    handle one of these options)
  - read oar.conf in oarsh (so admin can more easily change options in this
    script)
  - add support for X11 forwarding via oarsh
  - change variable for oarsh: OARSH_JOB_ID --> OAR_JOB_ID

version 2.0.0++ enhanced:
-------------------------

    - Now, with the ability to declare any type of resources like licences,
      VLAN, IP range, computing resources must have the type *default* and a
      network_address not null.
    - Possibility to declare associated resources like licences, IP ranges, ...
      and to reserve them like others.
    - Now you can connect to your jobs (not only for reservations).
    - Add "cosystem" job type (execute and do nothing for these jobs).
    - New scheduler : "oar_sched_gantt_with_timesharing". You can specify jobs
      with the type "timesharing" that indicates that this scheduler can launch
      more than 1 job on a resource at a time. It is possible to restrict this
      feature with words "user and name". For example, '-t
      timesharing=user,name' indicates that only a job from the same user with
      the same name can be launched in the same time than it.
    - Add PostGresSQL support. So there is a choice to make between MySQL and
      PostgresSQL. 
    - New approach for the scheduling : administrators have to insert into the
      databases descriptions about resources and not nodes. Resources have a
      network address (physical node) and properties. For example, if you have
      dual-processor, then you can create 2 different resources with the same
      natwork address but with 2 different processor names.
    - The scheduler can now handle resource properties in a hierarchical
      manner. Thus, for example, you can do "oarsub -l /switch=1/cpu=5" which
      submit a job on 5 processors on the same switch.
    - Add a signal handler in oarexec and propagate this signal to the user
      process.
    - Support '#OAR -p ...' options in user script.
    - Add in oar.conf:
        * DB_BASE_PASSWD_RO : for security issues, it is possible to execute
          request with parts specified by users with a read only account (like
          "-p" option).
        * OARSUB_DEFAULT_RESOURCES : when nothing is specified with the oarsub
          command then OAR takes this default resource description.
        * OAREXEC_DEBUG_MODE : turn on or off debug mode in oarexec (create
          /tmp/oar/oar.log on nodes).
        * FINAUD_FREQUENCY : indicates the frequency when OAR launchs Finaud
          (search dead nodes).
        * SCHEDULER_TIMEOUT : indicates to the scheduler the amount of time
          after what it must end itself.
        * SCHEDULER_JOB_SECURITY_TIME : time between each job.
        * DEAD_SWITCH_TIME : after this time Absent and Suspected resources are
          turned on the Dead state.
        * PROLOGUE_EPILOGUE_TIMEOUT : the possibility to specify a different
          timeout for prologue and epilogue (PROLOGUE_EPILOGUE_TIMEOUT).
        * PROLOGUE_EXEC_FILE : you can specify the path of the prologue script
          executed on nodes.
        * EPILOGUE_EXEC_FILE : you can specify the path of the epilogue script
          executed on nodes.
        * GENERIC_COMMAND : a specific script may be used instead of ping to
          check aliveness of nodes. The script must return bad nodes on STDERR
          (1 line for a bad node and it must have exactly the same name that
          OAR has given in argument of the command).
        * JOBDEL_SOFTWALLTIME : time after a normal frag that the system waits
          to retry to frag the job.
        * JOBDEL_WALLTIME : time after a normal frag that the system waits
          before to delete the job arbitrary and suspects nodes.
        * LOG_FILE : specify the path of OAR log file (default :
          /var/log/oar.log).
        
    - Add wait() in pingchecker to avoid zombies.
    - Better code modularization.
    - Remove node install part to launch jobs. So it is easier to upgrade from
      one version to an other (oarnodesetting must already be installed on each
      nodes if we want to use it).
    - Users can specify a method to be notified (mail or script).
    - Add cpuset support
    - Add prologue and epilogue script to be executed on the OAR server before
      and after launching a job.
    - Add dependancy support between jobs ("-a" option in oarsub).
    - In oarsub you can specify the launching directory ("-d" option).
    - In oarsub you can specify a job name ("-n" option).
    - In oarsub you can specify stdout and stderr file names.
    - User can resubmit a job (option "--resubmit" in oarsub).
    - It is possible to specify a read only database account and it will be
      used to evaluate SQL properties given by the user with the oarsub command
      (more scecure).
    - Add possibility to order assigned resources with their properties by the
      scheduler. So you can privilege some resources than others
      (SCHEDULER_RESOURCE_ORDER tag in oar.conf file)
    - a command can be specified to switch off idle nodes
      (SCHEDULER_NODE_MANAGER_SLEEP_CMD, SCHEDULER_NODE_MANAGER_IDLE_TIME,
      SCHEDULER_NODE_MANAGER_SLEEP_TIME in oar.conf)
    - a command can be specified to switch on nodes in the Absent state
      according to the resource property *cm_availability* in the table
      resources_ (SCHEDULER_NODE_MANAGER_WAKE_UP_CMD in oar.conf).
    - if a job goes in Error state and this is not its fault then OAR will
      resubmit this one.

version 1.6.1:
--------------

    - initialise the "ganttJobsPrediction" table with a right reference date
      (1970-01-01 00:00:01)
    - oarsub has the "-k, --checkpoint" option. It specifies the number of
      seconds before job walltime to send a SIGUSR2 on it.
    - You can see the list of events for jobs with -f option in oarstat
    - oardel can now send SIGUSR2 to the oarexec of a job (-c option)
    - oardel can now delete several jobs
    - Add a signal handler in oarexec and propagate this signal to the user
      process
    - Support '#OAR -p ...' options in user script
    - Add in oar.conf the possibility to specify a different timeout for
      prologue and epilogue (PROLOGUE_EPILOGUE_TIMEOUT)
    - when a connection to the DB fails, OAR retrie 5 times
    - handle the EXTERMINATE_JOB event and suspect all nodes if possible
    - add job state log table
    - add node properties log table
    - add possibility to use sentinelle.rb script in the ping_checker module
    - add a GRID5000 specific scheduler which implements specific policy
      (oar_sched_gant_g5k)
    - add -s option to oarnodes command --> show only state of nodes
    - add -l option to oarnodes command --> show only the node list
    - root can now delete any jobs in the same way the oar user could
    - change a few oardel messages
    - limit the commands (with arguments) specified by users::

        regular expression : [\w\s\/\.\-]*

    - change oaremovenode command to oarremovenode
    - enhance job error management
    - enhance suspicious nodes detection
    - fix bugs about accounting

version 1.6:
------------

    - debug reservation jobs (if the job has not the right number of requested
      nodes then it will wait for a delay. Once expired, the job will be
      launched on the nodes available).
    - add a cache for visualization of the gantt scheme (add two gantt table
      for the visu)
    - add an event log mechanism. It permits to know all decisions and events
      occuring in OAR with regards to jobs.
    - detection of errors (they can be traced via event_log table):
        * job working directory does not exist on the node output files cannot
        * be created
    - add deploy scheduler awareness (schedule on non deploy nodes firstly)
    - possibility to change property value via oarnodesetting command (-p
      option)
    - add the command "oaremovenode" that allows to delete a node of the
      database definitely
    - bug fix : now oarsub can use the user's script even if the oar user
      cannot
    - now, you can use special value "all" in oarsub ("nodes" resource). It
      gives all free nodes corresponding to the weight and properties
      specified.
    - debug Gantt visualization
    - add the possibility to test nodes via nmap
    - add accounting features (accounting table)
    - change nodeState_log table scheme to increase rapidity

