#!/usr/bin/perl -w
# $Id$
#
# This script aims at managing the node properties (list, add, delete).
# To set the properties values, use oarnodesettings.
#
# To use the quiet mode, just do something like:
#   echo -e "mysqlroot\nmysqlpassword\n" | oar_property.pl -q -l

use strict;
use warnings;
use oar_iolib;
use oar_conflib qw(init_conf get_conf is_conf);
use Getopt::Long;

# The functions are appended at the end of this file
sub print_usage();
sub check_property_name($);

Getopt::Long::Configure("gnu_getopt");

my ($Help,  $List_properties, $Quiet, $Varchar);
my @Add_property ;
my @Delete_property ;

GetOptions( "help|h"   => \$Help,
            "add|a=s"    => \@Add_property,
            "delete|d=s" => \@Delete_property,
            "list|l"   => \$List_properties,
            "quiet|q"  => \$Quiet,
            "varchar|c"  => \$Varchar
          );

if ($Help || (($#Add_property < 0) and ($#Delete_property < 0)  and (! defined($List_properties)))) {
    print_usage();
    exit(1);
}

my $base = iolib::connect();

my $query;

if (defined($List_properties)) {
    my %list = iolib::list_resource_properties_fields($base);
    foreach my $l (keys(%list)){
        print("$l\n");
    }
}

foreach my $r (@Delete_property){
    check_property_name($r);

    $base->do("ALTER TABLE resource_properties DROP COLUMN $r")
        or die("DB error: " . $base->errstr."\n");

    if (! $Quiet) {
        print("Removed property: $r\n");
    }
}

foreach my $a (@Add_property){
    check_property_name($a);

    my $req;
    if ($Varchar){
        $req = "ALTER TABLE resource_properties ADD COLUMN $a VARCHAR(255)";
    }else{
        $req = "ALTER TABLE resource_properties ADD COLUMN $a INT DEFAULT 0";
    }
    $base->do($req)
        or die("DB error: " . $base->errstr."\n");

    if (! $Quiet) {
        print("Added property: $a\n");
    }
}


	
exit(0);


#############################################################################
# FUNCTIONS
#
#Display usage
sub print_usage() {
    print <<EOS;
Usage: $0 [ -l | [ -a [ -v ] | -d ] ] [ -q ] [ -h ]
Manage OAR resource properties
Options:
 -l, --list                               list properties
 -a NAME, --add NAME                      add property
    -v, --varchar                         sql new field of type VARCHAR(255) (default is integer)
 -d NAME, --delete NAME                   delete property
 -q, --quiet                              quiet mode (no extra output)
 -h, --help                               show this help screen
EOS
}

# Check that the given parameter is a valid column name to avoid issues within
# MySQL
sub check_property_name($) {
    my $propertyname = shift;
    if (! $propertyname =~ /^[a-z0-9_]$/) {
        die("Error: '$propertyname' is not a valid property name");
    }
    if ($propertyname =~ /^(resource_id|node|besteffort|desktop_computing|deploy|expiry_date)$/ ) {
        die("Error: '$propertyname' is a OAR system property and may not be altered");
    }
}
#############################################################################

