Installing the OAR batch system
===============================



Overview
========

There are currently 3 methods to install OAR (All of them are documented in this page) :

 - with the debian packages
 - with the rpm packages
 - with the sources


The first thing you have to know is about the OAR architecture. A common OAR
installation is composed of:

    - a **server node** which will hold all of OAR "smartness". This node will run the oar server daemon;
    - a **frontend nodes** on which you will be allowed to login, then reserve some
      computing nodes (oarsub, oarstat, oarnodes, ...);
    - severals **computing nodes** (a.k.a. the nodes), on which the jobs will run.
    - and optionnaly a **vizualisation node** on which all the vizualisation web interfaces (monika, draw-gantt, ...)  will accessible ;

Server node
===========

Installation from the packages
------------------------------

**Instructions**

*For redhat like systems*::

        # Add the epel repository (choose the right version depending on your operating system)
        rpm -i http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-5.noarch.rpm
        
        # Add the oar repository
        FIXME: 
        
        # Install OAR server for the PostgreSQL backend
        yum install oar-server-pgsql
        
        # or Install OAR server for the MySQL backend
        yum install oar-server-mysql

*For the debian like systems*::
  
        # Add the OAR repository (choose the right one. See http://oar.imag.fr/repositories/)
        echo "http://oar-ftp.imag.fr/oar/2.5/debian squeeze main" > /etc/apt/sources.list.d/oar
        curl http://oar-ftp.imag.fr/oar/oarmaster.asc | sudo apt-key add -
        apt-get update

        # Install OAR server for the PostgreSQL backend
        apt-get install oar-server-pgsql
        
        # or Install OAR server for the MySQL backend
        apt-get install oar-server-mysql

Installation from the tarball
-----------------------------

**Requirements**

*For redhat like systems*::

          # Add the epel repository (choose the right version depending on your operating system)
          rpm -i http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-5.noarch.rpm

          # Build dependencies
          yum install gcc make tar python-docutils

          # Common dependencies
          yum install Perl Perl-base openssh Perl-DBI perl-Sort-Versions
          
          # MySQL dependencies
          yum install mysql-server mysql perl-DBD-MySQL
          
          # PostgreSQL dependencies
          yum install postgresql-server postgresql perl-DBD-Pg


*For debian like system*::

          # Build dependencies
          apt-get install gcc make tar python-docutils
          
          # Common dependencies
          apt-get install perl perl-base openssh-client openssh-server libdbi-perl libsort-versions-perl
          
          # MySQL dependencies
          apt-get install mysql-server mysql-client libdbd-mysql-perl
          
          # PostgreSQL dependencies
          apt-get install postgresql-server postgresql-client libdbd-pg-perl

**Instructions**

Get the sources::

        OAR_VERSION=2.5.1
        curl http://oar-ftp.imag.fr/oar/2.5/sources/stable/oar-${OAR_VERSION}.tgz | tar xzvf -
        cd oar-${OAR_VERSION}/

Build/Install/Setup the OAR server::

        # build
        make server-build
        # install
        make server-install
        # setup
        make server-setup

Configuration
-------------

The oar database
________________

Define the database configuration in /etc/oar/oar.conf. You need to set the
variables ``DB_TYPE, DB_HOSTNAME, DB_PORT, DB_BASE_NAME, DB_BASE_LOGIN, DB_BASE_PASSWD, DB_BASE_LOGIN_RO, DB_BASE_PASSWD_RO``::

        vi /etc/oar/oar.conf

Create the database and the databse users::

        oar-database --create --db-admin-user <ADMIN_USER> --db-admin-pass <ADMIN_PASS>

Init.d scripts
______________


If you have installed OAR from sources, you need to become root user and
install manually the init.d/default/sysconfig scripts present in the folders::

    $PREFIX/share/doc/oar-server/examples/scripts/{init.d,default,sysconfig}
    
Then use the script ``/etc/init.d/oar-server`` to start the OAR server daemon.

Adding resources to the system
______________________________

If you want to **automatically** initialize your cluster then you just need to
launch ``oar_resources_init``. It will detect the resources from the nodes that
you put in a file and store right OAR commands to initialize the database with
the appropriate values for the memory and the cpuset properties. Just try...

There is also a tool to help you managing your oar resources and admission 
rules : ``oaradmin``.
Take a look at the oaradmin documentation in the administrator commands section 
for more details.

*Otherwise:*

To add resources to your system, you can use (as root) the command oarnodesetting.
For a complete comprehension of what does this command, type man
oarnodesetting. For now, the two options you will need will be **-a** (means
add a resource) and **-h** (defines the resource hostname or ip adress).

For example, to add a computing resource locally to test OAR installation type::

        oarnodesetting -a -h 127.0.10.1

This will add a resource with 127.0.10.1 as host IP address.


You also can modify resources properties with **-p** option, for example::

        oarnodesetting -r 1 -p "deploy=YES"

will allow the resource #1 to accept jobs of the type deploy.


Notes
-----

Security issues
_______________

For security reasons it is hardly **recommended** to configure a read only
account for the OAR database (like the above example).  Thus you will be able
to add this data in DB_BASE_LOGIN_RO and DB_BASE_PASSWD_RO in *oar.conf*. 

PostgreSQL : autovacuum
_______________________
Be sure to activate the "autovacuum" feature in the "postgresql.conf" file (OAR
creates and deletes a lot of records and this setting cleans the postgres
database from unneeded records).

PostgreSQL : authentication
___________________________

With postgres you probably have to edit the ``pg_hba.conf`` to enable the connections to
this database. Your file must contains at its beginning the following lines::

    # in /etc/postgresql/8.1/main/pg_hba.conf or /var/lib/pgsql/data/pg_hba.conf
        host    oar         oar_ro            127.0.0.1          255.255.255.255    md5
        host    oar         oar               127.0.0.1          255.255.255.255    md5

About X11 usage in OAR
______________________

The easiest and scalable way to use X11 application on cluster nodes is to open
X11 ports and set the right DISPLAY environment variable by hand.  Otherwise
users can use X11 forwarding via ssh to access cluster frontal. After that you
must configure ssh server on this frontal with ::

    X11Forwarding yes
    X11UseLocalhost no

With this configuration, users can launch X11 applications after a 'oarsub -I'
on the given node or "oarsh -X node12".

Using Taktuk
____________

If you want to use taktuk to manage remote admnistration commands, you have to
install it. You can find information about taktuk from its website: 
http://taktuk.gforge.inria.fr.

Then, you have to edit your oar configuration file and to fill in the different 
related parameters: 

  - TAKTUK_CMD (the path to the taktuk command)
  - PINGCHECKER_TAKTUK_ARG_COMMAND (the command used to check resources states)
  - SCHEDULER_NODE_MANAGER_SLEEP_CMD (command used for halting nodes)

CPUSET feature
______________

OAR uses the CPUSET features provided with the Linux kernel >= 2.6. This
enables to restrict user processes only on reserved processors and clean
correctly the nodes after the end of the jobs.

For more information, look at the CPUSET file.

Energy saving
_____________

Starting with version 2.4.3, OAR provides a module responsible of advanced
management of wake-up/shut-down of nodes when they are not used.
To activate this feature, you have to:

    - provide 2 commands or scripts that are to be executed on the oar server
      to shutdown (or set into standby) some nodes and to wake-up some nodes
      (configure the path of those commands into the ENERGY_SAVING_NODE_MANAGER_WAKE_UP_CMD
      and ENERGY_SAVING_NODE_MANAGER_SHUT_DOWN_CMD variables into oar.conf)
    - configure the available_upto property of all your nodes:

      - available_upto=0           : to disable the wake-up and halt      
      - available_upto=1           : to disable the wake-up (but not the halt) 
      - available_upto=2147483647  : to disable the halt (but not the wake-up) 
      - available_upto=2147483646  : to enable wake-up/halt forever            
      - available_upto=<timestamp> : to enable the halt, and the wake-up until 
        the date given by <timestamp> 

    - activate the energy saving module by setting ENERGY_SAVING_INTERNAL="yes"
      and configuring the ENERGY_* variables into oar.conf
    - configure the metascheduler time values into SCHEDULER_NODE_MANAGER_IDLE_TIME,
      SCHEDULER_NODE_MANAGER_SLEEP_TIME and SCHEDULER_NODE_MANAGER_WAKEUP_TIME
      variables of the oar.conf file.
    - restart the oar server (you should see an "Almighty" process more).

You need to restart OAR each time you change an ENERGY_* variable.
More informations are available inside the oar.conf file itself. For more
details about the mechanism, take a look at the "Hulot" module documentation.



Frontend nodes
==============

Installation from the packages
------------------------------

**Instructions**

*For redhat like systems*::

        # Add the epel repository (choose the right version depending on your operating system)
        rpm -i http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-5.noarch.rpm

        # Add the oar repository
        FIXME: 

        # Install OAR user for the PostgreSQL backend
        yum install oar-user-pgsql
        
        # or Install OAR user for the MySQL backend
        yum install oar-user-mysql

*For the debian like systems*::
  
        # Add the OAR repository (choose the right one. See http://oar.imag.fr/repositories/)
        echo "http://oar-ftp.imag.fr/oar/2.5/debian squeeze main" > /etc/apt/sources.list.d/oar
        curl http://oar-ftp.imag.fr/oar/oarmaster.asc | sudo apt-key add -
        apt-get update

        # Install OAR server for the PostgreSQL backend
        apt-get install oar-user-pgsql
        
        # or Install OAR server for the MySQL backend
        apt-get install oar-user-mysql


Installation from the tarball
-----------------------------

**Requirements**

*For redhat like systems*::

          # Build dependencies
          yum install gcc make tar python-docutils

          # Common dependencies
          yum install Perl Perl-base openssh Perl-DBI
          
          # MySQL dependencies
          yum install mysql perl-DBD-MySQL
          
          # PostgreSQL dependencies
          yum install postgresql perl-DBD-Pg


*For debian like system*::

          # Build dependencies
          apt-get install gcc make tar python-docutils
          
          # Common dependencies
          apt-get install perl perl-base openssh-client openssh-server libdbi-perl
          
          # MySQL dependencies
          apt-get install mysql-client libdbd-mysql-perl
          
          # PostgreSQL dependencies
          apt-get install postgresql-client libdbd-pg-perl

**Instructions**

Get the sources::

        OAR_VERSION=2.5.1
        curl http://oar-ftp.imag.fr/oar/2.5/sources/stable/oar-${OAR_VERSION}.tgz | tar xzvf -
        cd oar-${OAR_VERSION}/

Build/Install/setup::

        # build
        make user-build
        # install
        make user-install
        # setup
        make user-setup


Configuration
-------------

Coherent configuration files between server node and user nodes
_______________________________________________________________

You need to have a coherent oar configuration between the server node and the
user nodes. So you can just copy the /etc/oar directory from to server node to
the user nodes.


OAR API Installation
--------------------

Since the version 2.5.1, OAR propose an API to control the oar server. This api must be installed on a frontend node (with the user module installed).

From the packaging
__________________

*For redhat like systems*::

        # Add the oar repository
        FIXME: 

        # Install OAR api for the PostgreSQL backend
        yum install oar-api-pgsql
        
        # or Install OAR api for the MySQL backend
        yum install oar-api-mysql

*For the debian like systems*::
  
        # Add the OAR repository (choose the right one. See http://oar.imag.fr/repositories/)
        echo "http://oar-ftp.imag.fr/oar/2.5/debian squeeze main" > /etc/apt/sources.list.d/oar
        curl http://oar-ftp.imag.fr/oar/oarmaster.asc | sudo apt-key add -
        apt-get update

        # Install OAR api for the PostgreSQL backend
        apt-get install oar-api-pgsql
        
        # or Install OAR api for the MySQL backend
        apt-get install oar-api-mysql


From the sources
________________

**Requirements**:

*For redhat like systems*::

          # Build dependencies
          yum install gcc make tar python-docutils

          # Common dependencies
          yum install perl perl-base perl-DBI perl-CGI perl-JSON perl-YAML perl-libwww-perl httpd
          
          # MySQL dependencies
          yum install mysql perl-DBD-MySQL
          
          # PostgreSQL dependencies
          yum install postgresql perl-DBD-Pg


*For debian like system*::

          # Build dependencies
          apt-get install gcc make tar python-docutils
          
          # Common dependencies
          apt-get install perl perl-base libdbi-perl libjson-perl libyaml-perl libwww-perl httpd-cgi
          
          # MySQL dependencies
          apt-get install mysql-server mysql-client libdbd-mysql-perl
          
          # PostgreSQL dependencies
          apt-get install postgresql-server postgresql-client libdbd-pg-perl

**Instructions**

Get the sources::

        OAR_VERSION=2.5.1
        curl http://oar-ftp.imag.fr/oar/2.5/sources/stable/oar-${OAR_VERSION}.tgz | tar xzvf -
        cd oar-${OAR_VERSION}/

build/install/setup::

        # build
        make api-build
        # install
        make api-install
        # setup
        make api-setup



Computing nodes
===============

Installation from the packages
------------------------------

**Instructions**

*For redhat like systems*::

        # Add the oar repository
        FIXME: 

        # Install OAR node
        yum install oar-node

*For the debian like systems*::
  
        # Add the OAR repository (choose the right one. See http://oar.imag.fr/repositories/)
        echo "http://oar-ftp.imag.fr/oar/2.5/debian squeeze main" > /etc/apt/sources.list.d/oar
        curl http://oar-ftp.imag.fr/oar/oarmaster.asc | sudo apt-key add -
        apt-get update

        # Install OAR node
        apt-get install oar-node

Installation from the tarball
-----------------------------

**Requirements**

*For redhat like systems*::

          # Build dependencies
          yum install gcc make tar python-docutils

          # Common dependencies
          yum install Perl Perl-base openssh 
          
*For debian like system*::

          # Build dependencies
          apt-get install gcc make tar python-docutils
          
          # Common dependencies
          apt-get install perl perl-base openssh-client openssh-server 
          
**Instructions**

Get the sources::

        OAR_VERSION=2.5.1
        curl http://oar-ftp.imag.fr/oar/2.5/sources/stable/oar-${OAR_VERSION}.tgz | tar xzvf -
        cd oar-${OAR_VERSION}/

build/install/setup::

        # build
        make node-build
        # install
        make node-install
        # setup
        make node-setup


Configuration
-------------
 
oar node ssh access
___________________

You need to ensure that the oar user can access to each nodes through ssh. To
ensure that, you can just copy the ``/var/lib/oar/.ssh`` folder from the oar
server to each nodes (ensure that ``/var/lib/oar/.ssh`` has the right
permissions).

Init.d scripts
______________

If you have installed OAR from sources, you need to become root user and
install manually the {init.d,default,sysconfig} scripts present in the folders::

    $PREFIX/share/doc/oar-node/examples/scripts/{init.d,default,sysconfig}

Then you juste need to use the script ``/etc/init.d/oar-node`` to start
the ssh daemon dedicated to oar-node.



Visualization node
==================

Description
-----------

There are two different tools. One, named Monika, displays the current cluster
state with all active and waiting jobs. The other, named drawgantt, displays
node occupation in a lapse of time.  These tools are CGI scripts and generate
HTML pages.

Installation from the packages
------------------------------

**Instructions**

*For redhat like systems*::

        # Add the oar repository
        FIXME: 

        yum install oar-web-status

*For the debian like systems*::
  
        # Add the OAR repository (choose the right one. See http://oar.imag.fr/repositories/)
        echo "http://oar-ftp.imag.fr/oar/2.5/debian squeeze main" > /etc/apt/sources.list.d/oar
        curl http://oar-ftp.imag.fr/oar/oarmaster.asc | sudo apt-key add -
        apt-get update

        apt-get install oar-web-status


Installation from the tarball
-----------------------------

**Requirements**:

*For redhat like systems*::

          # Build dependencies
          yum install gcc make tar python-docutils

          # Common dependencies
          yum install perl perl-base perl-DBI ruby-GD ruby-DBI perl-Tie-IxHash perl-Sort-Naturally perl-AppConfig
          
          # MySQL dependencies
          yum install mysql perl-DBD-MySQL ruby-mysql
          
          # PostgreSQL dependencies
          yum install postgresql perl-DBD-Pg ruby-pg


*For debian like system*::

          # Build dependencies
          apt-get install gcc make tar python-docutils
          
          # Common dependencies
          apt-get install perl perl-base ruby libgd-ruby1.8 libdbi-perl libtie-ixhash-perl libappconfig-perl libsort-naturally-perl
          
          # MySQL dependencies
          apt-get install libdbd-mysql-perl libdbd-mysql-ruby
          
          # PostgreSQL dependencies
          apt-get install libdbd-pg-perl libdbd-pg-ruby

**Instructions**

Get the sources::

        OAR_VERSION=2.5.1
        curl http://oar-ftp.imag.fr/oar/2.5/sources/stable/oar-${OAR_VERSION}.tgz | tar xzvf -
        cd oar-${OAR_VERSION}/

build/install/setup::

        # build
        make monika-build draw-gantt-build www-conf-build
        # install
        make monika-install draw-gantt-install www-conf-install
        # setup
        make monika-setup draw-gantt-setup www-conf-setup

Configuration
-------------

**Drawgantt configuration**

 - Edit ``/etc/oar/drawgantt.conf`` to fit your configuration.

**Monika configuration**

 - Edit ``/etc/oar/monika.conf`` to fit your configuration.
 
**httpd configuration**

 - You need to edit ``/etc/oar/apache.conf`` to fit your needs and verify that you
   http server configured.


Further informations
====================

For further information, please check the documentation section on the OAR website http://oar.imag.fr/.

