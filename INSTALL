Installing the OAR batch system
===============================


What do you need?
    - a cluster
    - to be an admin of this cluster
    - to get the install package of OAR (normally you have already done that)

Requirements
------------

There a three kinds of nodes, each requiring a specific software configuration.

These are :

    - the server node, which will hold all of OAR "smartness" ;
    - the login nodes, on which you will be allowed to login, then reserve some
      computational nodes ;
    - the computational nodes (a.k.a. the nodes), on which the jobs will run.

On every node, the "sentinelle" binary can be installed (it is not necessary).
This tool is used to launch commands on several computers, at a same time.
It ships with the current OAR package (but it is also available
separately in Taktuk in an Open Source License).

On every nodes (server, login, computational), the following packages must be
installed :

    - sudo
    - Perl
    - Perl-base
    - openssh (server and client)

On the OAR server and on the login nodes, the following packages must be
installed:

    - Perl-Mysql
    - Perl-DBI
    - MySQL
    - MySQL-shared
    - libmysql

From now on, we will suppose all the Perl/Mysql packages are
correctly installed and configured and mysql database is started.


Configuration of the cluster
----------------------------

The following steps have to be done, prior to installing OAR:

    - add a user named "oar" in the group "oar" on every node

    - let the user "oar" connect through ssh from any node to any node WITHOUT
      password. To achieve this, here is some standard procedure for OpenSSH:
      
        * create a set of ssh keys for the user "oar" with ssh-keygen (for
          instance 'id_dsa.pub' and 'id_dsa')
        * copy these keys on each node of the cluster in the ".ssh" folder of
          the user "oar"
        * append the contents of 'id_dsa.pub' to the file
          "~/.ssh/authorized_keys"
        * in "~/.ssh/config" add the lines::
        
            Host *
                ForwardX11 no
                StrictHostKeyChecking no
                PasswordAuthentication no
                AddressFamily inet

        * test the ssh connection between (every) two nodes : there should not
          be any prompt.

    - grant the user "oar" the permission to execute commands with root
      privileges. To achieve that, OAR makes use of sudo. As a consequence,
      /etc/sudoers must be configured. Please use visudo to add the following
      lines::

            Defaults>oar    env_reset,env_keep = "OARLIB OARUSER OARDIR PWD
            PERL5LIB DISPLAY OARCONFFILE OARSH_JOB_ID"
            
            Cmnd_Alias OARCMD = /usr/lib/oar/oarnodes, /usr/lib/oar/oarstat,\
            /usr/lib/oar/oarsub, /usr/lib/oar/oardel, /usr/lib/oar/oarhold,\
            /usr/lib/oar/oarnotify, /usr/lib/oar/oarresume, /usr/lib/oar/oarsh
            %oar ALL=(oar) NOPASSWD: OARCMD
            
            oar ALL=(ALL) NOPASSWD:ALL
            
            Defaults:www-data   env_keep += "SCRIPT_NAME SERVER_NAME
            SERVER_ADMIN HTTP_CONNECTION REQUEST_METHOD CONTENT_LENGTH
            SCRIPT_FILENAME SERVER_SOFTWARE HTTP_TE QUERY_STRING REMOTE_PORT
            HTTP_USER_AGENT SERVER_PORT SERVER_SIGNATURE REMOTE_ADDR
            CONTENT_TYPE SERVER_PROTOCOL PATH REQUEST_URI GATEWAY_INTERFACE
            SERVER_ADDR DOCUMENT_ROOT HTTP_HOST"
            
            www-data ALL=(oar) NOPASSWD: /usr/lib/oar/oar-cgi

There are a three different flavors of installation :

    * server:  install the daemon which must be running on the server
    * user:    install all the tools needed to submit and manage jobs for the
      users (oarsub, oarstat, oarnodes, ...)
    * node:    install the tools for a computing node

The installation is straightforward:

    - become root
    - go to OAR source repository
    - You can set Makefile variables in the command line to suit your configuration
      (change "OARHOMEDIR" to the home of your user oar and "PREFIX" where you want
      to copy all OAR files).
    - run make  <module> [module] ...
        where module := { server-install | user-install | node-install | doc-install | debian-package }
              OPTIONS := { OARHOMEDIR | OARCONFDIR | OARUSER | PREFIX | MANDIR | OARDIR | BINDIR | SBINDIR | DOCDIR }
    - Edit /etc/oar.conf file to match your cluster configuration.
    - Make sure that the PATH environnement variable contains $PREFIX/$BINDIR of
      your installation (default is /usr/local/bin).


Initialization of OAR database (MySQL) is achieved using oar_mysql_db_init script provided
with the server module installation and located in $PREFIX/sbin (/usr/local/sbin in default Makefile).

If you want to use a postgres SQL server then there is currently no automatic installation script.
You have to add a new user which can connect on a new oar database(use the commands *createdb* and *createuser*).
After that, you have to authorize network connections on the postgresql server in the *postgresql.conf* (uncomment
*tcpip_socket = true*).
Then you can import the database scheme stored in *oar_postgres.sql* (use the SQL command "\\i").

Here is an example to perform all the potgres database install(there is certainly other ways to do that)::

    createuser -P
        Enter name of role to add: oar
        Enter password for new role:
        Enter it again: 
        Shall the new role be a superuser? (y/n) n
        Shall the new role be allowed to create databases? (y/n) n
        Shall the new role be allowed to create more new roles? (y/n) n
        CREATE ROLE
    
    createuser -P
        Enter name of role to add: oar_ro
        Enter password for new role:
        Enter it again: 
        Shall the new role be a superuser? (y/n) n
        Shall the new role be allowed to create databases? (y/n) n
        Shall the new
    
    sudo su - postgres
    
    createdb oar
    psql oar
        \i /usr/lib/oar/oar_postgres.sql
        GRANT ALL PRIVILEGES ON accounting,admission_rules,assigned_resources,challenges,event_log_hostnames,event_logs,files,frag_jobs,gantt_jobs_predictions,gantt_jobs_predictions_visu,gantt_jobs_resources,gantt_jobs_resources_visu,job_dependencies,job_resource_descriptions,job_resource_groups,job_state_logs,job_types,jobs,moldable_job_descriptions,queues,resource_logs,resources TO oar;
        GRANT SELECT ON accounting,admission_rules,assigned_resources,event_log_hostnames,event_logs,files,frag_jobs,gantt_jobs_predictions,gantt_jobs_predictions_visu,gantt_jobs_resources,gantt_jobs_resources_visu,job_dependencies,job_resource_descriptions,job_resource_groups,job_state_logs,job_types,jobs,moldable_job_descriptions,queues,resource_logs,resources TO oar_ro;
        
        sudo vi /etc/postgresql/8.1/main/pg_hba.conf
            host    oar         oar_ro            127.0.0.1          255.255.255.255    md5
            host    oar         oar               127.0.0.1          255.255.255.255    md5

    sudo /etc/init.d/postgresql-8.1 reload
    # You can test it with
    psql oar oar_ro -h127.0.0.1


For more informations about postgresql, go to http://www.postgresql.org/.


Note: The same machine may host several or even all modules.

Note about X11:
The easiest and scalable way to use X11 application on cluster nodes is to open X11 ports and set the right DISPLAY environment variable by hand.
Otherwise users can use X11 forwarding via ssh to access cluster frontal. After that you must configure ssh server on this frontal with
::

    X11Forwarding yes
    X11UseLocalhost no

With this configuration, users can launch X11 applications after a 'oarsub -I' on the given node.

CPUSET installation
~~~~~~~~~~~~~~~~~~~
..  OAR can use CPUSET features provided with the Linux kernel >= 2.6. This enables
    to restrict user processes only on reserved processors and clean correctly nodes
    after the job.
    To perform this installation you must read the documentation in Tools/oarsh/README.

.. include:: Tools/oarsh/README

Visualization tools installation
--------------------------------

There are two different tools. One, named Monika, displays the current cluster state
with all active and waiting jobs. The other, named drawgantt, diplays node occupation
in a lapse of time.
These tools are CGI scripts and generate HTML pages.

You can install these in this way:
    drawgantt:
    
        - Make sure you installed "ruby", "libdbd-mysql-ruby" or "libdbd-pg-ruby" and "libgd-ruby1.8" packages.
        - Copy "drawgantt.cgi" and "drawgantt.conf" in the CGI folder of your web server
          (ex: /usr/lib/cgi-bin/ for Debian).
        - Copy all icons and javascript files in a folder that web server can find them
          (ex: /var/www/oar/Icons and /var/www/oar/Icons).
        - Make sure that these files can be read by the web server user.
        - Edit "drawgantt.conf" and change tags to fit your configuration.

    Monika:
    
        - The package "perl-AppConfig" is required.
        - Read INSTALL file in the monika repository.

Debian packages
---------------

OAR is also released under Debian packages (or Ubuntu). You can find them at
http://oar.imag.fr/download.html.

If you want to add it as a new source in your /etc/apt/sources.list then add
the line::

    deb http://oar.imag.fr/download ./

The installation will ask you if you want to initialize the nodes. It will copy
the oar SSH key on each specified nodes. You can skeep this step by you will
have to do this manually.

**IMPORTANT** : if you want to use the cpuset features then you have to install
the oar-node package on computing nodes otherwise this is not mandatory.
But if this is performed then the configuration of `Important notes`_ 
must be set on these nodes.

After installing packages, you have to edit the `configuration file`_ on the
server, submition nodes and computing nodes to fite your needs.

Starting
--------

First, you must start OAR daemon on the server (its name is "Almighty").

    - if you have installed OAR from sources, become oar user and launch command
      "Almighty" (it stands in $PREFIX/sbin).
    - if you have installed OAR from Debian packages, use the script
      "/etc/init.d/oar-server" to start the daemon.

Then you have to insert new resources in the database via the command
oarnodesetting_.
If you want to have an idea how does it work then launch
$PREFIX/oar/detect_new_resources.sh. It will print right commands execute with
an appropriate value for the memory and the cpuset properties.

If you want to initialize your whole cluster in 1 command you can use this one
(tune it to fite your cluster). You must be oar to run this command because
oarnodesetting_ will called and the sentinelle.pl will log onto all nodes
stored in "node_list.txt" file without password:
::

    export PREFIX=/var/lib
    $PREFIX/oar/sentinelle.pl -f node_list.txt \
    -p "$PREFIX/oar/detect_new_resources.sh" | sh

Then you can launch the oarnodes_ command and see all new resources inserted.

Further informations
--------------------
For further information, please check http://oar.imag.fr/.

