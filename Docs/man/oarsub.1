.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "oarsub 1"
.TH oarsub 1 "2005-05-04" "1" "OAR commands"
.SH "NAME"
oarsub \- submit a job to OAR batch scheduler.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBoarsub\fR [\fB\-l\fR resource_list][\fB\-q\fR queuename][\fB\-p\fR property_query][\fB\-I\fR][\fB\-v\fR][\fB\-r\fR date][\fB\-c\fR job id][script|program][\fB\-s\fR stagein_directory][\fB\-m\fR stagein_md5sum]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This command is used to submit jobs a to \s-1OAR\s0 batch scheduler. Jobs can be a program or a script which contains description of this job.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-l, \-\-resource\fR resource=value[,[resource=value]...]" 4
.IX Item "-l, --resource resource=value[,[resource=value]...]"
Defines resource list requested for a job.
.Sp
Defined resources :
  nodes : Request number of nodes (special value \*(L"all\*(R" is replaced by the number of free nodes corresponding to the weight and properties; special value \*(L"max\*(R" is replaced by the number of free,absent and suspected nodes corresponding to the weight and properties).
  walltime : Request maximun time. Format is [hour:mn:sec|hour:mn|mn]
  weight : the weight that you want to reserve on each node
.IP "\fB\-q, \-\-queue\fR queuename" 4
.IX Item "-q, --queue queuename"
Specifies the destination queue. If not defined the job is enqueued in default queue
.IP "\fB\-p, \-\-property\fR property" 4
.IX Item "-p, --property property"
Specify with \s-1SQL\s0 syntax reservation properties.
.IP "\fB\-I, \-\-interactive\fR" 4
.IX Item "-I, --interactive"
Interactive mode.
Give you a shell on the first reserved node.
.IP "\fB\-r, \-\-reservation\fR date" 4
.IX Item "-r, --reservation date"
Ask for a reservation job on the date in argument
.IP "\fB\-c, \-\-connect\fR jobId" 4
.IX Item "-c, --connect jobId"
Connect to a reservation in Running state
.IP "\fB\-v, \-\-verbose\fR" 4
.IX Item "-v, --verbose"
verbose mode.
.IP "\fB\-s, \-\-stagein\fR directory|tgz" 4
.IX Item "-s, --stagein directory|tgz"
Set the stagein directory or archive.
.IP "\fB\-m, \-\-stagein\-md5sum\fR md5sum" 4
.IX Item "-m, --stagein-md5sum md5sum"
Set the stagein file md5sum.
.SH "SCRIPT"
.IX Header "SCRIPT"
Script can contain the description of the job. Lines with options must begin by the key \fB#OAR\fR. There the same options as previous.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Job submission with arguments :
.IP "oarsub \-l nodes=4 \-I" 4
.IX Item "oarsub -l nodes=4 -I"
.PD 0
.ie n .IP "oarsub \-q default \-l walltime=50:30:00,nodes=10,weight=1 \-p ""switch = 'sw1'"" /home/users/toto/prog" 4
.el .IP "oarsub \-q default \-l walltime=50:30:00,nodes=10,weight=1 \-p ``switch = 'sw1''' /home/users/toto/prog" 4
.IX Item "oarsub -q default -l walltime=50:30:00,nodes=10,weight=1 -p switch = 'sw1' /home/users/toto/prog"
.ie n .IP "oarsub \-r ""2004\-04\-27 11:00:00"" \-l nodes=12,weight=2" 4
.el .IP "oarsub \-r ``2004\-04\-27 11:00:00'' \-l nodes=12,weight=2" 4
.IX Item "oarsub -r 2004-04-27 11:00:00 -l nodes=12,weight=2"
.IP "oarsub \-c 154 \-I" 4
.IX Item "oarsub -c 154 -I"
.PD
.PP
Script example:
.IP "#OAR \-l nodes=4" 4
.IX Item "#OAR -l nodes=4"
.PD 0
.IP "#OAR \-q long \-l walltime=2:30" 4
.IX Item "#OAR -q long -l walltime=2:30"
.IP "/home/users/toto/prog" 4
.IX Item "/home/users/toto/prog"
.PD
.PP
Submit the script :
.IP "oarsub /home/users/toto/script" 4
.IX Item "oarsub /home/users/toto/script"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIoardel\fR\|(1), \fIoarstat\fR\|(1), \fIoarnodes\fR\|(1), \fIoarhold\fR\|(1), \fIoarresume\fR\|(1)
.SH "COPYRIGHTS"
.IX Header "COPYRIGHTS"
.Vb 1
\& Copyright (C) 2003 Laboratoire Id\-Imag (http://www\-id.imag.fr). This software is licensed under the GNU Library General Public License. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Ve
