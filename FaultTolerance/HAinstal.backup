#!/bin/bash
#@Author: Joris Bremond

#Requirements : this script must be started with admin (root) right

#-----------------------Variables---------------------------------------------------

####--Paquets---#####

DRBD="drbd8-utils"
HEARTBEAT2="heartbeat-2"
HEARTBEAT2GUI="heartbeat-2-gui"
#HEARTBEAT2DEV="heartbeat-2-dev"
MODULEASSITANT="module-assistant"

####--BDD---#####
# "mysql" or "postgresql"
BD="mysql"
##only for postgres
PGVERSION="8.3"

####--Partionnement---#####
#Changer le /dev/loop/0
LOOPBACK=/dev/loop0
#taille en MegaBytes
TAILLE="200"


#---------------------------Initialisation--------------------------------------------------------------------#
echo ''
echo 'Is it the master machine ? (y) or (n)'
read rep

if [ "$rep" = "y" ]
then
	echo 'enter the backup hostanme :'
	read backup
elif [ "$rep" = "n" ]
then
	echo 'you are in the backup machine'
	echo 'enter the master hostname :'
	read master
else
	echo 'erreur'
	exit 1
fi


echo ''
ifconfig
echo "enter network interface :"
read eth

echo ''
echo 'enter Virtual IP (ex : 172.16.16.220)'
read ip
echo 'enter CIDR netmask (ex : 24)'
read mask

#On remet la conf de mysql comme au debut
if [ -e /etc/mysql/my.cnf.backup ]; then
	cp /etc/mysql/my.cnf.backup /etc/mysql/my.cnf
fi


#-----------------------Installation on debian---------------------------------------------------
apt-get update
apt-get -y install $DRBD $HEARTBEAT2 $HEARTBEAT2GUI $MODULEASSITANT
module-assistant auto-install drbd8

#-----------------------Arret des services---------------------------------------------------
if [ "$BD" = "mysql" ]; then
	/etc/init.d/$BD stop
elif [ "$BD" = "postgresql" ]; then
	/etc/init.d/$BD"-"$PGVERSION stop
else
	exit 1
fi

/etc/init.d/oar-server stop

#-----------------------Suppression des configuration existantes---------------------------------------------------
if [ -f /etc/ha.d/ha.cf ]; then
	rm /etc/ha.d/ha.cf
fi
if [ -f /etc/ha.d/haresources ]; then
	rm /etc/ha.d/haresources
fi
if [ -f /var/lib/heartbeat/crm/cib.xml ]; then
	rm /var/lib/heartbeat/crm/cib.xml
fi
if [ -f /var/lib/heartbeat/crm/cib.xml.sig ]; then
	rm /var/lib/heartbeat/crm/cib.xml.sig
fi

##############-----------------------Configurations---------------------------------------------------################

#-----------------------/etc/ha.d/authkeys---------------------------------------------------
echo 'auth 1' > /etc/ha.d/authkeys
echo '1 sha1 oarteam' >> /etc/ha.d/authkeys
chmod 0600 /etc/ha.d/authkeys


#-----------------------/etc/ha.d/ha.cf---------------------------------------------------



echo '#logfacility local7 ' > /etc/ha.d/ha.cf
echo 'logfile /var/log/ha-log' >> /etc/ha.d/ha.cf
echo 'debugfile /var/log/ha-debug' >> /etc/ha.d/ha.cf
echo '#use_logd on' >> /etc/ha.d/ha.cf
echo 'udpport 694' >> /etc/ha.d/ha.cf
echo 'keepalive 1 # 1 second' >> /etc/ha.d/ha.cf
echo 'deadtime 10' >> /etc/ha.d/ha.cf
echo 'initdead 80' >> /etc/ha.d/ha.cf
#attention, peut beuger si le systeme n'est pas en anglais
if [ "$rep" = "y" ]; then
	iplocal=$(ifconfig $eth | grep "inet "  | cut -d : -f2 | cut -d " " -f1)
	ipdist=$(resolveip $backup -s)
	echo "ucast $eth $iplocal" >> /etc/ha.d/ha.cf
	echo "ucast $eth $ipdist" >> /etc/ha.d/ha.cf
elif [ "$rep" = "n" ]; then
	iplocal=$(resolveip $master -s)
	ipdist=$(ifconfig $eth | grep "inet "  | cut -d : -f2 | cut -d " " -f1)
	echo "ucast $eth $ipdist" >> /etc/ha.d/ha.cf
	echo "ucast $eth $iplocal" >> /etc/ha.d/ha.cf
else
	exit 1
fi
#echo "bcast $eth" >> /etc/ha.d/ha.cf

if [ "$rep" = "y" ]; then
	echo "node $(uname -n)" >> /etc/ha.d/ha.cf
	echo "node $backup" >> /etc/ha.d/ha.cf
elif [ "$rep" = "n" ]; then
	echo "node $master" >> /etc/ha.d/ha.cf
	echo "node $(uname -n)" >> /etc/ha.d/ha.cf
else
	exit 1
fi
echo 'crm yes' >> /etc/ha.d/ha.cf
echo 'auto_failback off' >> /etc/ha.d/ha.cf



#-----------------------/etc/ha.d/haresources---------------------------------------------------

if [ "$BD" = "mysql" ]; then
	cp /etc/init.d/$BD /etc/init.d/"$BD"ha
	if [ "$rep" = "y" ]; then
		echo "$(uname -n) IPaddr2::$ip/$mask/$eth drbddisk::mysql Filesystem::/dev/drbd0::/mnt/drbddata::ext3 "$BD"ha oar-server" > /etc/ha.d/haresources
	elif [ "$rep" = "n" ]; then
		echo "$master IPaddr2::$ip/$mask/$eth drbddisk::mysql Filesystem::/dev/drbd0::/mnt/drbddata::ext3 "$BD"ha oar-server" > /etc/ha.d/haresources
	else
		exit 1
	fi
elif [ "$BD" = "postgresql" ]; then
	cp /etc/init.d/$BD"-"$PGVERSION /etc/init.d/$BD"-""$PGVERSION"ha
	if [ "$rep" = "y" ]; then
		echo "$(uname -n) IPaddr2::$ip/$mask/$eth drbddisk::mysql Filesystem::/dev/drbd0::/mnt/drbddata::ext3 $BD"-""$PGVERSION"ha oar-server" > /etc/ha.d/haresources
	elif [ "$rep" = "n" ]; then
		echo "$master IPaddr2::$ip/$mask/$eth drbddisk::mysql Filesystem::/dev/drbd0::/mnt/drbddata::ext3 $BD"-""$PGVERSION"ha oar-server" > /etc/ha.d/haresources
	else
		exit 1
	fi
else
	exit 1
fi


#-----------------------On creer le fichier cib.xml---------------------------------------------------

python /usr/lib/heartbeat/haresources2cib.py

########correction d'un bug : inversion NIC et cidr_mask ------####

if [ $(cat /var/lib/heartbeat/crm/cib.xml | grep IPaddr2 | grep nic | cut -d "=" -f4 | cut -d "/" -f1 | cut -d "\"" -f2) = "$mask" ]; then
	sed -e "s/value=\"$mask/value=\"MONANCRE/g" /var/lib/heartbeat/crm/cib.xml > /var/lib/heartbeat/crm/cib.xml.tmp && mv -f /var/lib/heartbeat/crm/cib.xml.tmp /var/lib/heartbeat/crm/cib.xml
	sed -e "s/$eth/$mask/g" /var/lib/heartbeat/crm/cib.xml > /var/lib/heartbeat/crm/cib.xml.tmp && mv -f /var/lib/heartbeat/crm/cib.xml.tmp /var/lib/heartbeat/crm/cib.xml
	sed -e "s/MONANCRE/$eth/g" /var/lib/heartbeat/crm/cib.xml > /var/lib/heartbeat/crm/cib.xml.tmp && mv -f /var/lib/heartbeat/crm/cib.xml.tmp /var/lib/heartbeat/crm/cib.xml
fi
chown hacluster:haclient /var/lib/heartbeat/crm/cib.xml
chmod 0600 /var/lib/heartbeat/crm/cib.xml

#-----------------------On modifie le service OAR---------------------------------------------------


echo '#! /bin/sh' > /etc/init.d/oar-server

echo '### BEGIN INIT INFO' >> /etc/init.d/oar-server
echo '# Provides:         oar-server' >> /etc/init.d/oar-server
echo '# Required-Start:   $network $local_fs $remote_fs' >> /etc/init.d/oar-server
echo '# Required-Stop:' >> /etc/init.d/oar-server
echo '# Default-Start:    2 3 4 5' >> /etc/init.d/oar-server
echo '# Default-Stop:     0 1 6' >> /etc/init.d/oar-server
echo '# Short-Description:    OAR server init script' >> /etc/init.d/oar-server
echo '### END INIT INFO' >> /etc/init.d/oar-server

echo '# $Id: oar-server.init.d 1048 2007-12-18 23:17:08Z capitn $' >> /etc/init.d/oar-server

echo 'PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin' >> /etc/init.d/oar-server
echo 'DAEMON=/usr/sbin/Almighty' >> /etc/init.d/oar-server
echo 'NAME=oar-server' >> /etc/init.d/oar-server
echo 'DESC=oar-server' >> /etc/init.d/oar-server
echo 'PIDFILE=/var/run/$NAME.pid' >> /etc/init.d/oar-server

echo 'test -x $DAEMON || exit 0' >> /etc/init.d/oar-server

echo '# Include oar defaults if available' >> /etc/init.d/oar-server
echo 'if [ -f /etc/default/oar-server ] ; then' >> /etc/init.d/oar-server
echo '        . /etc/default/oar-server' >> /etc/init.d/oar-server
echo 'fi' >> /etc/init.d/oar-server

echo 'set -e' >> /etc/init.d/oar-server

echo 'case "$1" in' >> /etc/init.d/oar-server
echo '  start)' >> /etc/init.d/oar-server
echo '        echo -n "Starting $DESC: "' >> /etc/init.d/oar-server
echo '        start-stop-daemon --start --quiet --pidfile $PIDFILE \' >> /etc/init.d/oar-server
echo '                --make-pidfile --background --exec $DAEMON -- $DAEMON_OPTS' >> /etc/init.d/oar-server
echo '        echo "$NAME."' >> /etc/init.d/oar-server
echo '        ;;' >> /etc/init.d/oar-server
echo '  stop)' >> /etc/init.d/oar-server
echo '        echo -n "Stopping $DESC: "' >> /etc/init.d/oar-server
echo '        start-stop-daemon --stop --quiet --pidfile $PIDFILE && \' >> /etc/init.d/oar-server
echo '                rm -f /var/run/$NAME.pid' >> /etc/init.d/oar-server
echo '        echo "$NAME."' >> /etc/init.d/oar-server
echo '        ;;' >> /etc/init.d/oar-server

echo '  status)' >> /etc/init.d/oar-server
echo '		if [ -f $PIDFILE ]' >> /etc/init.d/oar-server
echo '		then' >> /etc/init.d/oar-server
echo '			PID=`head -n 1 $PIDFILE`' >> /etc/init.d/oar-server
echo '			if [ `ps -ef | grep -v grep | grep $PID | wc -l` -ge 1 ]' >> /etc/init.d/oar-server
echo '			then' >> /etc/init.d/oar-server
echo '				echo "OAR is running"' >> /etc/init.d/oar-server
echo '				exit 0' >> /etc/init.d/oar-server
echo '			else' >> /etc/init.d/oar-server
echo '				echo "OAR is not runnig"' >> /etc/init.d/oar-server
echo '				exit 2' >> /etc/init.d/oar-server
echo '			fi' >> /etc/init.d/oar-server
echo '		else' >> /etc/init.d/oar-server
echo '			echo "OAR is not runnig"' >> /etc/init.d/oar-server
echo '			exit 2' >> /etc/init.d/oar-server
echo '		fi' >> /etc/init.d/oar-server
echo '		;;' >> /etc/init.d/oar-server	

echo '  reload|force-reload|restart)' >> /etc/init.d/oar-server
echo '        $0 stop' >> /etc/init.d/oar-server
echo '        sleep 1' >> /etc/init.d/oar-server
echo '        $0 start' >> /etc/init.d/oar-server
echo '        ;;' >> /etc/init.d/oar-server
echo '  *)' >> /etc/init.d/oar-server
echo '        N=/etc/init.d/$NAME' >> /etc/init.d/oar-server
echo '        echo "Usage: $N {start|restart|stop|status}" >&2' >> /etc/init.d/oar-server
echo '        exit 1' >> /etc/init.d/oar-server
echo '        ;;' >> /etc/init.d/oar-server
echo 'esac' >> /etc/init.d/oar-server

echo 'exit 0' >> /etc/init.d/oar-server

chmod 755 /etc/init.d/oar-server



#-----------------------Variable pour configuration de DRBD---------------------------------------------------
if [ "$BD" = "mysql" ]; then
	mysqldirold=$(cat /etc/$BD/my.cnf | grep datadir | cut -d "=" -f2)
elif [ "$BD" = "postgresql" ]; then
	postgresdirold=$(cat /etc/$BD/$PGVERSION/main/postgresql.conf | grep data_directory | cut -d "'" -f2)
else
	exit 1
fi

#-----------------------Configuration de DRBD---------------------------------------------------


echo 'global { usage-count no; }' > /etc/drbd.conf

echo 'resource mysql {' >> /etc/drbd.conf
echo '	# Trois protocoles sont disponibles :' >> /etc/drbd.conf
echo '	# En protocole A, l acquittement d ecriture (sur le maître)' >> /etc/drbd.conf
echo '	# est envoyé dès que les données ont été transmises au' >> /etc/drbd.conf
echo '	# sous volume physique et envoyé à l esclave.' >> /etc/drbd.conf
echo '	# En protocole B, l acquittement d ecriture (sur le maître)' >> /etc/drbd.conf
echo '	# est envoyé dès que les données ont été transmises au' >> /etc/drbd.conf
echo '	# sous volume physique et reçues par l esclave.' >> /etc/drbd.conf
echo '	# En protocole C, l acquittement d écriture (sur le maître)' >> /etc/drbd.conf
echo '	# est envoyé dès que les données ont été transmises au' >> /etc/drbd.conf
echo '	# sous volume physique ET au sous volume physique de' >> /etc/drbd.conf
echo '	# l esclave.' >> /etc/drbd.conf
echo '	protocol C;' >> /etc/drbd.conf

echo '	startup {' >> /etc/drbd.conf
echo '		# Au démarrage du noeud, on attend (cela bloque le' >> /etc/drbd.conf
echo '		# démarrage) le noeud distant pendant 2 minutes.' >> /etc/drbd.conf
echo '		wfc-timeout 120;' >> /etc/drbd.conf
echo '	}' >> /etc/drbd.conf

echo '	# Si une erreur d entrée sortie est rencontrée avec le sous' >> /etc/drbd.conf
echo '	# volume physique, on freeze la machine et' >> /etc/drbd.conf
echo '	# Heartbeat basculera l exploitation sur l autre machine' >> /etc/drbd.conf
echo '	disk {' >> /etc/drbd.conf
echo '		on-io-error detach;' >> /etc/drbd.conf
echo '	}' >> /etc/drbd.conf

echo '	syncer {' >> /etc/drbd.conf
echo '		rate 700000K;' >> /etc/drbd.conf
echo '		# On ne limite pas la vitesse de synchronisation.' >> /etc/drbd.conf
echo '		al-extents 257;' >> /etc/drbd.conf
echo '		# al-extent définit la taille de la « hot-area » : DRBD' >> /etc/drbd.conf
echo '		# stocke en permanence dans les meta-data les zones' >> /etc/drbd.conf
echo '		# actives du volume physique. En cas de crash ces zones' >> /etc/drbd.conf
echo '		# seront ainsi resynchronisées dès le retour du' >> /etc/drbd.conf
echo '		# noeud. Chaque extent définit une zone de 4Mo. Plus al-' >> /etc/drbd.conf
echo '		# extents est grand, plus la resynchronisation après un' >> /etc/drbd.conf
echo '		# crash sera longue, mais il y aura moins d écritures de' >> /etc/drbd.conf
echo '		# meta-data.' >> /etc/drbd.conf
echo '		# Avec 257 on a donc 1giga de « hot aera ».' >> /etc/drbd.conf
echo '	}' >> /etc/drbd.conf

if [ "$rep" = "y" ]; then
	master=$(uname -n)
elif [ "$rep" = "n" ]; then
	backup=$(uname -n)
else
	exit 1
fi

echo "	on $master {" >> /etc/drbd.conf
echo '		device /dev/drbd0;' >> /etc/drbd.conf
echo "		disk $LOOPBACK;" >> /etc/drbd.conf
echo "		address $iplocal:7788;" >> /etc/drbd.conf
echo '		meta-disk internal;' >> /etc/drbd.conf
echo '	}' >> /etc/drbd.conf


echo "	on $backup {" >> /etc/drbd.conf
echo '		device /dev/drbd0;' >> /etc/drbd.conf
echo "		disk $LOOPBACK;" >> /etc/drbd.conf
echo "		address $ipdist:7788;" >> /etc/drbd.conf
echo '		meta-disk internal;' >> /etc/drbd.conf
echo '	}' >> /etc/drbd.conf	

echo '}' >> /etc/drbd.conf		
	

#-----------------------Creation de la partition contenant les donnees BDD---------------------------------------------------



modprobe drbd

dd if=/dev/zero of=/image.img bs=1M count=$TAILLE
losetup $LOOPBACK /image.img
mkfs -t ext3 $LOOPBACK
shred -zvf -n 1 $LOOPBACK

if [ ! -e /dev/drbd0 ]; then
	mknod /dev/drbd0 b 147 0
fi

#Creation des metadata
drbdadm create-md all

drbdadm up all

if [ ! -e /mnt/drbddata ]; then
	mkdir /mnt/drbddata
fi

#a faire que sur le master
if [ "$rep" = "y" ]; then
	#Le master lance la synchro
	drbdadm -- --overwrite-data-of-peer primary all

	mkfs -t ext3 /dev/drbd0	
	mount /dev/drbd0 /mnt/drbddata
	
	if [ "$BD" = "mysql" ]; then
		cp -r $mysqldirold /mnt/drbddata
		chown -R mysql:mysql /mnt/drbddata/mysql
	elif [ "$BD" = "postgresql" ]; then
		cp -r $postgresdirold /mnt/drbddata
		chown -R postgres:postgres /mnt/drbddata/main
	else
		exit 1
	fi
	
fi



#-----------------------On change le repertoire dans la BDD---------------------------------------------------

if [ "$BD" = "mysql" ]; then
	mysqldiroldn=$(echo $mysqldirold | sed 's/\//\\\//g')
	#On fait une sauvegarde du fichier
	cp /etc/mysql/my.cnf /etc/mysql/my.cnf.backup
	sed -e "s/$mysqldiroldn/\/mnt\/drbddata\/mysql/g" /etc/mysql/my.cnf > /etc/mysql/my.cnf.tmp && mv -f /etc/mysql/my.cnf.tmp /etc/mysql/my.cnf 
elif [ "$BD" = "postgresql" ]; then
	postgresdiroldn=$(echo $postgresdirold | sed 's/\//\\\//g')
	#On fait une sauvegarde du fichier
	cp /etc/$BD/$PGVERSION/main/postgresql.conf /etc/$BD/$PGVERSION/main/postgresql.conf.backup
	sed -e "s/$postgresdiroldn/\/mnt\/drbddata\/main/g" /etc/$BD/$PGVERSION/main/postgresql.conf > /etc/$BD/$PGVERSION/main/postgresql.conf.tmp && mv -f /etc/$BD/$PGVERSION/main/postgresql.conf.tmp /etc/$BD/$PGVERSION/main/postgresql.conf
else
	exit 1
fi




#-----------------------On enleve le demarrage auto des demons lancees par hearbeat---------------------------------------------------

update-rc.d -f oar-server remove
update-rc.d -f drbd remove
if [ "$BD" = "mysql" ]; then
	update-rc.d -f $BD remove
elif [ "$BD" = "postgresql" ]; then
	update-rc.d -f $BD"-"$PGVERSION remove
else
	exit 1
fi




#/etc/init.d/heartbeat start

#-----------------------Fin du script---------------------------------------------------

