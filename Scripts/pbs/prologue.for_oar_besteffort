#!/usr/bin/perl

use strict;

####################################################################
# CUSTOMIZATION

# Configuration variables
my $PBSNODES_CMD="/usr/pbs/pbs/bin/pbsnodes";
my @NODES=("medetphy1","medetphy2");
my $OARNODESETTING_CMD="/usr/local/sbin/oarnodesetting";

# Definition of how PBS resources correspond to OAR resources:
my %oar_resource_id; 

  # Medetphy1 (from CPU 2 (0) to 15 (13) -> resources 3 to 16):
  my $oar_id=3;
  for (my $pbs_id = 0; $pbs_id < 14; $pbs_id++) { 
     $oar_resource_id{medetphy1}{$pbs_id}=$oar_id;
     $oar_id++;
  }

  # Medetphy2 (from CPU 0 to 15 -> resources 17 to 32)
  for (my $pbs_id = 0; $pbs_id < 17; $pbs_id++) {
     $oar_resource_id{medetphy2}{$pbs_id}=$oar_id;
     $oar_id++;
  }
  
#######################################################################            

print "Prologue starting...\n";

foreach my $node (@NODES) { 
  my $FILE;
  my $key;
  my $value;
  open($FILE,"$PBSNODES_CMD $node|");
  my @PBSRESOURCES=(<$FILE>);
  close($FILE);
  foreach (@PBSRESOURCES) {
    ($key,$value)=split(/\s*=\s*/);
    $key=~s/^\s*//;
    $key=~s/\s*$//;
    if ($key eq "jobs") {
      $value=~s/^\s*//;
      $value=~s/\s*$//;
      my @jobs=split(/\s*,\s*/,$value);
      foreach my $job (@jobs) {
        chomp($job);
        (my $j,my $cpu)=split(/\//,$job);
        if ($j eq $ARGV[0]) {
          print "Setting OAR resource $oar_resource_id{$node}{$cpu} to absent state\n";
          `$OARNODESETTING_CMD -r $oar_resource_id{$node}{$cpu} -s Absent`;
        }
      } 
    }
  }
}


print "Prologue end.\n";


