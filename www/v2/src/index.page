---
title: Home
inMenu: true
directoryName: oar
orderInfo: 1
---

OAR is a resource manager (or batch scheduler) for large clusters.

h2. Latest News

		 |/2^. _7.04.08_ | *GSoC 2008  Student application: "%{color:red}deadline extended to April 7th%":offers/soc.html*|

    |/2^. _17.03.08_ | *OAR officially accepted as mentoring organisation on Google Summer of Code 2008. "GSoC 2008 (Project Ideas)":offers/soc.html*|


    |/2^. _05.03.08_ | *Release "2.2.11":https://gforge.inria.fr/frs/?group_id=125*|
    |see "CHANGELOG":https://gforge.inria.fr/frs/shownotes.php?release_id=1875|

    WARNING: Since this version you have to install taktuk >= 3.6 if you want to use it.

    |/2^. _03.12.07_ | *Release "2.2.10":https://gforge.inria.fr/frs/?group_id=125*|

    |/2^. _24.10.07_ | *Release "2.2.9":https://gforge.inria.fr/frs/?group_id=125*|

    |/2^. _22.10.07_ | *Release "2.2.8":https://gforge.inria.fr/frs/?group_id=125*|

    |/2^. _03.10.07_ | *Release "2.2.7":https://gforge.inria.fr/frs/?group_id=125*|

    |/2^. _27.09.07_ | *Release "2.2.6":https://gforge.inria.fr/frs/?group_id=125*|

    |/2^. _26.09.07_ | *Release "2.2.5":https://gforge.inria.fr/frs/?group_id=125*|

    |/2^. _09.09.07_ | *Release "2.2.4":https://gforge.inria.fr/frs/?group_id=125*|

    |/2^. _05.09.07_ | *Release "2.2.3":https://gforge.inria.fr/frs/?group_id=125*|

    |/2^. _30.08.07_ | *Release "2.2.2":https://gforge.inria.fr/frs/?group_id=125*|

    |/2^. _28.08.07_ | *Release "2.2.1":https://gforge.inria.fr/frs/?group_id=125*|

"more news...":news.html

h2. Forge link

All the development effort is stored in the INRIA gforge service : "https://gforge.inria.fr/projects/oar/":https://gforge.inria.fr/projects/oar/.

You can find at this URL:

    * releases
    * bug reports
    * mailing lists
    * source repository
    * documentation
    * ...

h2. Overview

This batch system is based on a database (MySql), a script language (Perl) and an optional scalable administrative tool (component of Taktuk framework). It is composed of modules which interact only with database and are executed as independent programs.  So formally, there is no API, the system is completely defined by the database schema. This approach eases the development of specific modules. Indeed, each module (such as schedulers) may be developed in any language having a database access library.

Main features :

    * Batch and Interactive jobs
    * Admission rules
    * Walltime
    * Matching of resources (job/node properties)
    * Hold and resume jobs
    * Multi-schedulers support (simple fifo and fifo with matching)
    * Multi-queues with priority
    * Best-effort queues (for exploiting idle resources)
    * Check compute nodes before launching
    * Epilogue/Prologue scriptsi
    * Activity visualization tools (Monika)
    * No Daemon on compute nodes
    * rsh and ssh as remote execution protocols (managed by Taktuk)
    * Dynamic insertion/deletion of compute node
    * Logging
    * Backfiling
    * First-Fit Scheduler with matching resource
    * Advance Reservation
    * Environnement of Demand support (Ka-tools integration)
    * Grid integration with Cigri system
    * Simple Desktop Computing Mode
    
