
 					      		**************************
					      		* Web Portal User Manual *
	                                                **************************


This memo gives you help in setting up the Web Portal and using its various functionalities. To understand properly how the Web Portal works you must have a decent knowledge of OAR Restull API. The API can be found at http://wiki-oar.imag.fr/index.php/OAR_API . Additional information and tutorials about various functionalities of the OAR could be found at OAR wesite http://oar.imag.fr . 


Table of Contents
=================

1. About the Web Portal
2. Pre-requisites
3. Setting up the Web Portal
   3.1 Putting up the Web Portal Directory.
   3.2 Using oar_devel appliance.
   3.3 Adding new Users
   3.4 Configuring the apache server.
   3.5 Setting up the variables in variable.js
   3.6 Changes in oar.conf
4. Authentication
5. Various Features,Functionalities and their Use
   5.1  Global Layout and History
   5.2  Jobs List
   5.3  Resource List
   5.4  Jobs Submission
   5.5  Delete Job
   5.6  Update Resources
   5.7  Single Job/Resources 
   5.8  Oaradmin
   5.9  Charts
   5.10 Drawgantt Chart & Monika
   5.11 Help
6. Adding a new page (Functionality)
7. Troubleshooting




1. About the Web Portal:
========================
This Web Portal was developed as a part of Google Summer of Code 2010 project. Mr. Olivier Richard,a Senior Developer of OAR and an assistant professor in Computer Sciences at Polytechâ€™Grenoble and Joseph Fourier University, was the mentor for this project. He guided and mentored Mr. Sundeep Kumar Mishra, an undergraduate student in Computer Science and Engineering at IIIT Hyderabad, in this project.



2. Pre-requisites:
==================
The list of pre-requisites is as follows:-

	(a) OAR should be installed.
	(b) OAR-Restfull API should be installed.
	(c) Apache server should be installed.
	(d) Perl and Ruby must be installed.


3. Setting up the Web Portal:
=============================
Any user can set up the portal by using following instructions:-

	3.1 Putting up the Web Portal Directory:
	========================================
	    Put the poar directory (Web Portal Directory) in /var/www.

	3.2 Using oar_devel appliance: 
	==============================
	    If you are using oar_devel appliance, then every thing will automatically work. oar_devel appliance have two users 'oar' and 'kameleon' both 		    having password 'kameleon'. If you want to add any new user follow the point 3.3.

	3.3 Adding new Users:
	=====================
	    If no other user is present in '/etc/oar/api-users' , execute following command as root to add a new user:-
				htpasswd -b -c /etc/oar/api-users username password

	    If already some users are present in '/etc/oar/api-users' , execute following command as root to add a new user:-
				htpasswd -b /etc/oar/api-users username password


	3.4 Configuring the apache server:
	==================================
	   Add following lines in apache2/sites-available/default :-
	   
			       ScriptAlias /oarapi /usr/lib/cgi-bin/oarapi/oarapi.cgi
			       ScriptAlias /oarapi-debug /usr/lib/cgi-bin/oarapi/oarapi-debug.cgi
			       ScriptAlias /oarapi-priv /usr/lib/cgi-bin/oarapi/oarapi.cgi
			       ScriptAlias /oarapi-priv-debug /usr/lib/cgi-bin/oarapi/oarapi.cgi

			       <Directory /usr/lib/cgi-bin/oarapi>
			         Options ExecCGI -MultiViews FollowSymLinks
			       </Directory>

			       <Location /oarapi-priv>
			         Options ExecCGI -MultiViews FollowSymLinks
			         AuthType      basic
			         AuthUserfile  /etc/oar/api-users
			         AuthName      \"OAR API authentication\"
			         Require valid-user
			         #RequestHeader set X_REMOTE_IDENT %{REMOTE_USER}e
			         RewriteEngine On
			         RewriteCond %{REMOTE_USER} (.*)
			         RewriteRule .* - [E=MY_REMOTE_IDENT:%1]
			         RequestHeader add X-REMOTE_IDENT %{MY_REMOTE_IDENT}e
			       </Location>	


	3.5 Setting up the variables in variable.js:
	============================================
	There is a file variable.js in the Web Portal directory. It contains the location variables where oarapi,monika,drawgantt and monika is present. 		If these api's are present at a diffrent location in your machine. Change the location.
	If you are using port redirection kindly change http://localhost to http://localhost:portnumber


	3.6 Changes in oar.conf:
	========================
	Change the value of API_JOBS_URI_DEFAULT_PARAMS as follows:-

	API_JOBS_URI_DEFAULT_PARAMS="state=Finishing,Running,Resuming,Suspended,Launching,toLaunch,Waiting,toAckReservation,Hold,Error,Terminated"

	You can add any other state of jobs also. But no limits specification.



4. Authentication:
==================
Authentication in Web Portal comes due to the authentication part present in the oar-api. Only authenticated users can perform certain kind of actions.
As soon as the Web Portal starts it asks for username and password. Submit a valid username and password.
How to add new users can been seen in section 3.3.

The Authentication specification of various types of users are as follows:-

Rights of Normal User:
	1. Only an authenticated user can submit a job.
	2. Only an authenticated user can delete a job.
	3. Only an authenticated user can view the full details about single job and single resource.
	4. Only an authenticated user can delete admission rule.

Rights of 'oar' User:
	1. Only 'oar' user can change the state of a resource.
	2. Only 'oar' user can create a new Resource.
	3. Only 'oar' user can create a new admission rule.
	4. Only 'oar' user can view and change the value of configuration variables.





5. Various Features,Functionalities and their Use:
==================================================
The steps to use various functionalities present in the Web Portal is as follows :-

		5.1  Jobs List
		==============
		It displays the list of all the jobs submitted to the system.


		5.2  Resource List
		==================
		It displays the list of all the resources and their state.

		5.3  Jobs Submission
		====================
		Only an authenticated user can submit a job. It has two kind of Submission forms as follows:-
				1. The Submission Panel which has been divided into options specified in 'oarsub' command. 
				2. Submission Panel which has been been divided into Common Inputs and Advanced input types.
		You can expand an option and specify the values. Then collapse the option and submit the job.

		5.4  Delete Job
		===============
		You have to be an authenticated user inorder to use this facility. This facilitates an user to delete a certain job.

		5.5  Update Resources
		=====================
		Only 'oar' user can use this facility. It helps in updating the state of a resource.

		5.6  Single Job/Resources
		=========================
		You need to be an authenticated user to use this facility. This features facilitates you to get the full information about a certain job 			and a certain resource.

		5.7  Oaradmin
		=============
		Oaradmin facility basically contain following 3 parts:-
		
			1. Admission rules:
			===================
			You have to an authenticated user to use view information about admission rules, add new admission rule and delete any admission 				rule.

			2. Resource Generation:
			=======================
			Only 'oar' user can generate the resources.
			Don't use any space while specifying the the Resource Properties.


			3. Oar-Configuration Variable:
			==============================
			Only 'oar' user can view and set configuration variables.

		5.8  Charts
		===========
		The chart displays the portion of jobs in various state. Two kind of charts have been integrated namely Raphael.js and Processsing.js 			chart libraries. 
		In order to get proper results API_JOBS_URI_DEFAULT_PARAMS object of /etc/oar/oar.conf should not have any limit restriction.

		5.9 Drawgantt Chart & Monika
		============================
		Inorder to get it working you must set the Drawgantt_URI and Monika_URI variables in variables.js directory. These variables point to the 			location where Drawgantt and Monika are present in the system.
		They display information related to jobs.

		5.10 Help
		=========
		This pages contains various FAQ's which are helpful in using various functionalities of the portal.


6. Adding a new page (Functionality)
====================================
You can add a new page facilitating certain functionality by following certain steps :-
		
		1. Add a <pagename>.js file in pages directory present in Web Portal directory.
		2. Include this <pagename>.js in poar.html file present in Web Portal directory.
		3. Add the leaf name of this new page in tree-nav-poar.json.
		3. Add the Object present in <pagename>.js in poar.js. This object will be triggered when the leaf corresponding to the page is clicked. 			   You can add this variable in list where welcome,Resources and several variables have been added.
		4. The Object must have an id which is the concatenation of id specified in tree-nav-poar.json and '-panel'. 
		   Example: Suppose in tree-nav-poar.json you specified the id of the leaf as 'newpage'.
			    Now you must keep the id of Object of <pagename>.js as 'newpage-panel'.





7. Troubleshooting
==================
In case, you face any problem in using the Web Portal, you can consult following people by sending them an email :-

		1. Olivier Richard	olivier.richard@imag.fr
		2. Sundeep Kumar Mishra	sundeep.iiit@gmail.com

Hope you enjoy using Web Portal for OAR.



					      		**********************
				              		* End of User Manual *
					      		**********************
