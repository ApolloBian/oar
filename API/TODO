- Supporter le rhold if job a running dans /jobs/<id>.html
- Creer /jobs/<id>/resources  (à l'instar de /resources/<id>/jobs) et ajouter les uri correspondantes dans /jobs
- Database connection failures should not result in a loop waiting for the database, but an instantaneous error (should we use another db_connect function?) 
- /jobs/details?structure=oar devrait sortir la même structure que "oarstat -Y"

- Finir les formulaires et le parsing des options (check_gridjob dans apilib), debugger --FORCE
- Dans l'api oargrid, définir une structure de données que l'on peut utiliser à la place de la syntaxe cluster:rdef=... (mais bien conserver cette syntaxe aussi)  ??
- job keys dans OAR API (pouvoir importer la cle depuis l'api)
- Implementer POST /resources/<id>/status (equiv oarnodesetting -s) -> necessaire pour DELETE /resources/<id> puisqu'il faut mettre Dead une resource avant de la supprimer.

- Blacklister les options suivantes de POST /jobs :
-D, --dumper                  Print result in DUMPER format
-X, --xml                     Print result in XML format
-Y, --yaml                    Print result in YAML format
-J, --json                    Print result in JSON format
-h, --help                    Print this help message
-V, --version

- Implémenter "--resubmit"

- For a later release, thing about --stagein (and stageout?)


Bugs:

- https://helpdesk.grid5000.fr/oarapi/Grenoble/jobs.html
   YAML data not understood
 -> not a bug: oar 2.2 sur genepi, hors l'api utilise oarnodes de oar 2.4 (array jobs en plus)

- probleme de synchro de date (jobs soumis avec date de début 5s dans le futur par rapport à l'api de cyril)

- Oargrid ne prends pas en compte les options multiples (exemple: -t besteffort -t timesharing), même si l'API le gère ("type"=>["timesharing", "besteffort"])
