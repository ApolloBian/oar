#!/usr/bin/perl -w
# This script looks at the database to see if there is room in the gantt to add
# some extra time to a job. If so, it then increase the walltime of the job.
# Warning: the WALLTIME_JOB_WALLTIME environement variables will not be updated 
# within the job.
# This script must be run by Almighty before the scheduler
use strict;
use warnings;
use DBI();
use OAR::IO;
use OAR::Conf qw(init_conf dump_conf get_conf is_conf get_conf_with_default_param);
use OAR::Modules::Judas qw(oar_debug oar_warn oar_error send_log_by_email set_current_log_category);

init_conf($ENV{OARCONFFILE});
my $SCHEDULER_JOB_SECURITY_TIME = get_conf_with_default_param("SCHEDULER_JOB_SECURITY_TIME",1);
my $EXTRA_TIME_DURATION = get_conf_with_default_param("EXTRA_TIME_DURATION", 0);

if ($EXTRA_TIME_DURATION == 0) {
    exit 0;
}

sub process_current_extratime_requests($) {
    my $dbh = shift;
    OAR::IO::clean_past_extratime_requests($dbh);
    my $jobs = OAR::IO::get_jobs_for_extratime($dbh);
    foreach my $jobid (keys(%$jobs)) {
        my $extratime_allowed = $EXTRA_TIME_DURATION - $jobs->{$jobid}->{extratime};
        next if ($extratime_allowed <= 0); # nothing more to do, request will be dropped after the end of the job
        my $from = $jobs->{$jobid}->{start_time} + $jobs->{$jobid}->{walltime};
        my $to = $from + $extratime_allowed;
        my $extratime_ok = OAR::IO::get_possible_job_end_time_in_interval($dbh, $from, $to, $SCHEDULER_JOB_SECURITY_TIME) - $from;
        if ($extratime_ok <= 0) {
            oar_warn("[extratime] [$jobid] Request for ".$extratime_allowed."s: no extra time could be added for now\n");
            next;
        } elsif ($extratime_ok < $extratime_allowed) {
            oar_warn("[extratime] [$jobid] Request for ".$extratime_allowed."s: only ".$extratime_ok."s added for now\n");
        } elsif ($extratime_ok == $extratime_allowed) {
            oar_warn("[extratime] [$jobid] Request for ".$extratime_allowed."s: done.\n");
        } else {
            oar_warn("[extratime] [$jobid] $extratime_allowed < $extratime_ok, this should not happen.\n");
            next;
        }
        OAR::IO::update_walltime_for_job($dbh, $jobid, $jobs->{$jobid}->{walltime}, $extratime_ok);
        OAR::IO::update_extratime_request($dbh, $jobid, $jobs->{$jobid}->{extratime} + $extratime_ok);
    }
}

my $dbh = OAR::IO::connect();

process_current_extratime_requests($dbh);

$dbh->disconnect();
