#!/usr/bin/perl
#
# This script must be setuid root.
# Cases to use this script:
#   - user $Oaruser executes this script and OARDO_BECOME_USER is empty
#       --> @ARGV is executed with root privileges
#   - user $Oaruser executes this script and OARDO_BECOME_USER is set
#       --> @ARGV is executed with $ENV{OARDO_BECOME_USER} privileges
#   - a user, different of $Oaruser, executes this script
#       --> only $Cmd_wrapper can be executed with $Oaruser privileges with
#           @ARGV arguments

use strict;
use warnings;

###############################################################################
# Static conf to edit #
#######################

my $Cmd_wrapper = "";

my $Oardir = "/var/lib/oar";
my $Oarconffile = "/etc/oar/oar.conf";
my $Oarxauthlocation = "/usr/bin/xauth";
my $Oarshellwrapper = "/etc/oar/shell_user_wrapper.pl";
my $Oaruser = "oar";

###############################################################################

$ENV{OARDO_USER} = getpwuid($<);
$ENV{OARDO_UID} = $<;
$ENV{OARDIR} = $Oardir;
$ENV{PERL5LIB} = $Oardir;
$ENV{OARUSER} = $Oaruser;
$ENV{OARCONFFILE} = $Oarconffile;
$ENV{OARXAUTHLOCATION} = $Oarxauthlocation;
$ENV{OARSHELLWRAPPER} = $Oarshellwrapper;

my @clean_argv;
# BEGIN CLEAN

# Clean ARGV to prevent tainted perl behaviour
my %clean;
for (my $i=0; $i <= $#ARGV; $i++){
    $clean{$ARGV[$i]} = $i;
}

foreach my $c (keys(%clean)){
    $clean_argv[$clean{$c}] = $c;
}

# unset shell variables
delete @ENV{qw(IFS CDPATH ENV BASH_ENV MAIL)};

# clean PATH
$ENV{PATH} =~ m/^(.*)$/m; 
$ENV{PATH} = $1;

# END CLEAN

sub change_process_owner($){
    my $user = shift;

    my @tmp = getpwnam($user);
    if ($#tmp < 0){
        warn("oardo: Cannot get information from user '$user'.\n");
        exit(2);
    }
    $< = $tmp[2];
    if ($!){
        warn("oardo: Cannot set UID to '$user'.\n");
        exit(2);
    }
    $> = $tmp[2];
    if ($!){
        warn("oardo: Cannot set EUID to '$user'.\n");
        exit(2);
    }
#    $( = $tmp[3]."$(";
#    $) = $tmp[3]."$)";
    $ENV{USER} = $user;
    $ENV{LOGNAME} = $user;
    $ENV{SHELL} = $tmp[8];
    $ENV{HOME} = $tmp[7];
    delete($ENV{OARDO_BECOME_USER});
}

if ($Cmd_wrapper ne ""){
    # Try to execute a specific command by a lamba user
    change_process_owner($Oaruser);
    exec($Cmd_wrapper,@clean_argv);
    warn("oardo: Cannot execute with oar privileges : @clean_argv\n");
    exit(1);
}

my $oar_uid = getpwnam($Oaruser);
if ($< == $oar_uid){
    # We are oar so we want to execute the command with root privileges
    my $user = "root";
    $user = $ENV{OARDO_BECOME_USER} if (defined($ENV{OARDO_BECOME_USER}) and ($ENV{OARDO_BECOME_USER} ne ""));
    change_process_owner($user);
    exec(@clean_argv);
    warn("oardo: Cannot execute with oar privileges : @clean_argv.\n");
    exit(1);
}else{
    warn("oardo: You are not oar so you cannot use this command.\n");
    exit(3);
}

