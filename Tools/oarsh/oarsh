#!/bin/bash
#
# In sshd_config you must have this line :
#     AcceptEnv OAR_CPUSET SUDO_USER
# User to become is in $SUDO_USER
# $OAR_CPUSET contains the cpuset name

###############################################################################
# Default variable definitions.
# If you want to change them then make it in the configuration file (oar.conf)
#
#echo "OAR configuration file : $OARCONFFILE"

OARSH_OARSTAT_CMD=
OPENSSH_CMD=/usr/bin/ssh
OARSH_OPENSSH_DEFAULT_OPTIONS="-oProxyCommand=none -oPermitLocalCommand=no"
###############################################################################

source $OARCONFFILE || exit 7

# Add security option for X11 forwarding
XAUTH_LOCATION=$(which xauth)
if [ -x "$XAUTH_LOCATION" ]
then
    OARSH_OPENSSH_DEFAULT_OPTIONS="$OARSH_OPENSSH_DEFAULT_OPTIONS -o XAuthLocation=$XAUTH_LOCATION"
else
    OARSH_OPENSSH_DEFAULT_OPTIONS="$OARSH_OPENSSH_DEFAULT_OPTIONS -o XAuthLocation=/bin/true"
fi

# Get the name of the current cpuset #
function get_current_cpuset() {
    CPUSETFILE=/proc/self/cpuset

    if [ -r $CPUSETFILE ]
    then
        echo $(< $CPUSETFILE)
    fi
}
######################################

export OAR_CPUSET=""

[ -n "$OARSH_OARSTAT_CMD" ] || OAR_CPUSET=$(get_current_cpuset)
if [ "$OAR_CPUSET" == "" ] || [ "$OAR_CPUSET" == "/" ]
then
    if [ -n "$OARSH_OARSTAT_CMD" ]
    then
        if [ $OARSH_JOB_ID -gt 0 ] 2>/dev/null
        then
            OAR_CPUSET=$($OARSH_OARSTAT_CMD -fj $OARSH_JOB_ID | grep "^    cpuset_name = " | cut -d " " -f 7)
            if [ "$OAR_CPUSET" == "" ] 
            then
                echo "[OARSH] Cannot get the OAR job cpuset name." 1>&2
                echo "[OARSH] So you are not on a computing node and the job $OARSH_JOB_ID does not exist." 1>&2
                exit 1
            else
                echo $OAR_CPUSET | grep $SUDO_USER"_" &> /dev/null
                if [ $? -ne 0 ]
                then
                    echo "[OARSH] Cannot get the OAR job cpuset name." 1>&2
                    echo "[OARSH] So you are not on a computing node and the job $OARSH_JOB_ID is not yours." 1>&2
                    exit 2
                fi
            fi
        else
            echo "[OARSH] Cannot get the OAR job cpuset name." 1>&2
            echo "[OARSH] AND there is not a valid OARSH_JOB_ID environment variable defined." 1>&2
            echo "[OARSH] With BASH you can use a syntax like (if your job is the 42):" 1>&2
            echo "[OARSH]     OARSH_JOB_ID=42 oarsh node_name ..." 1>&2
            echo "[OARSH]   or" 1>&2
            echo "[OARSH]     export OARSH_JOB_ID=42" 1>&2
            echo "[OARSH]     oarsh node_name ..." 1>&2
            exit 3
        fi
    else
        echo "[OARSH] Cannot get the OAR job cpuset name" 1>&2
        exit 4
    fi
fi

# Test if a specific ssh connection key is used
OPENSSH_KEY_FILE="/tmp/oar_runtime/$OAR_CPUSET.sshkey"
if [ -r $OPENSSH_KEY_FILE ]
then
    exec $OPENSSH_CMD $OPENSSH_DEFAULT_OPTIONS -i $OPENSSH_KEY_FILE "$@"
    echo "[OARSH] Exec wih the key failed"
    exit 5
fi

#Manage display
if [ -n "$DISPLAY" ]
then
    if [ -x "$XAUTH_LOCATION" ]
    then
        unset XAUTHORITY
        $XAUTH_LOCATION -H -u $SUDO_USER xauth extract - ${DISPLAY} | $XAUTH_LOCATION merge -
    fi
fi

exec $OPENSSH_CMD $OPENSSH_DEFAULT_OPTIONS -oSendEnv="OAR_CPUSET SUDO_USER" "$@"
echo "[OARSH] Exec with environments failed"
exit 6

