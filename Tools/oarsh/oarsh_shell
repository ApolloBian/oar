#!/bin/bash
# $Id$
# This is the shell program used with the oarsh script.
# It adds its own process in the cpuset OAR_CPUSET and launches
# the shell or the script of the user SUDO_USER.

DEFAULT_SHELL=/bin/bash

# $1 = Name of the cpuset
# $2,$3,... = PIDs to add
# Add PIDS into the cpuset $1
function add_process_to_cpuset() {
    ######################
    # CPUSET assignation #
    ###########################################################################
    CPUSET_MOUNT_POINT=$(mount -t cpuset | cut -d " " -f 3 | head -1)
    CPUSETFILE="$CPUSET_MOUNT_POINT/$1/tasks"
    
    if ( ! $(sudo test -w $CPUSETFILE) )
    then
        echo "OARSH: Cannot find cpuset file : $CPUSETFILE" 1>&2
        exit 1
    fi
    shift
    for p in $@
    do
        sudo sh -c "echo $p > $CPUSETFILE" || return 1
        sudo renice 0 $@ > /dev/null 2>&1
    done
    ###########################################################################
}

if [ "$SUDO_USER" == "" ]
then
    if [ "$SSH_CLIENT" != ""  ] && [ "$OAR_KEY" != "1" ]
    then
        echo "OARSH: The OAR_KEY environment variable is not defined and this seems to be a oar user connection." 1>&2
        echo "OARSH: See 'Important notes' part of the 'CPUSET installation' section of the OAR documentation." 1>&2
        exit 5
    fi
    # It must be oar
    if [ "$OAR_CPUSET" != "" ]
    then
        add_process_to_cpuset $OAR_CPUSET $$ $PPID || exit 2
    fi
    export SHELL=$DEFAULT_SHELL
    exec $DEFAULT_SHELL "$@"
else
    if [ "$OAR_CPUSET" == "" ]
    then
        echo "OARSH: OAR_CPUSET variable is empty; Is your sshd right configured with 'AcceptEnv OAR_CPUSET SUDO_USER' on all computing nodes?" 1>&2
        exit 3
        
    fi
    add_process_to_cpuset $OAR_CPUSET $$ $PPID || exit 2
    
    #Manage display
    if [ -n "$DISPLAY" ]
    then
        #XAUTH_LOCATION=$(which xauth)
        XAUTH_LOCATION="/usr/bin/X11/xauth"
        if [ -x "$XAUTH_LOCATION" ]
        then
            echo $XAUTHORITY >> /tmp/toto.log
            $XAUTH_LOCATION -q extract - ${DISPLAY#localhost} | sudo -H -u $SUDO_USER $XAUTH_LOCATION merge -
        fi
    fi
    #Change tty owner
    TTY=$(tty) && test -e $TTY && sudo chown $SUDO_USER:oar $TTY && sudo chmod 660 $TTY
    if [ "$1" == "" ]
    then
        # Simulate initial login
        exec sudo -i -u $SUDO_USER
    else
        # Get user shell (must be optimized)
        PASSWD_LINE=$(getent passwd $SUDO_USER)
        export SHELL=$(echo $PASSWD_LINE | cut -d : -f 7)
        if [ "$SHELL" == "" ]
        then
            echo "OARSH: No shell found for user $SUDO_USER." 1>&2
            exit 4
        else
            export HOME=$(echo $PASSWD_LINE | cut -d : -f 6)
            cd $HOME
            exec sudo -H -u $SUDO_USER $SHELL "$@"
#            exec sudo -s -H -u $SUDO_USER -- "$@"
        fi
    fi
fi

