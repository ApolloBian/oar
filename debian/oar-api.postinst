#! /bin/sh
# postinst script for oar-api
#
# see: dh_installdeb(1)

set -e
# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

#set -x
#export DEBCONF_DEBUG=developer

. /usr/share/debconf/confmodule
db_version 2.0

reload_apache()
{
        if apache2ctl configtest 2>/dev/null; then
                invoke-rc.d apache2 force-reload || true
        else
                echo "Your apache2 configuration is broken, so we're not restarting it for you."
        fi
}

# Manage permissions and setuid bits
chown oar:www-data /usr/lib/cgi-bin/oarapi
chmod 750 /usr/lib/cgi-bin/oarapi
chown oar:oar /usr/lib/cgi-bin/oarapi/oarapi.cgi
chown oar:oar /usr/lib/cgi-bin/oarapi/oarapi-debug.cgi
chmod a+s /usr/lib/cgi-bin/oarapi/oarapi.cgi
chmod a+s /usr/lib/cgi-bin/oarapi/oarapi-debug.cgi

# Installation of the apache configuration
ln -s /etc/oar/apache-api.conf /etc/apache2/conf.d/oar-api.conf
#reload_apache
echo "

 You may have to enable some modules into apache if you want
 oar-api to be fully operational (authentication). At least
 'a2enmod ident' and maybe 'a2enmod authnz_ldap'.
 For 'ident' to work, you'll also need 'pidentd' to be installed
 and activated into your system (generally through xinetd).

"

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


